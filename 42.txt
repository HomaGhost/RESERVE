.486
.model flat, stdcall

option casemap : none

include windows.inc
include kernel32.inc 
include user32.inc 
include masm32.inc
includelib kernel32.lib 
includelib user32.lib 
includelib masm32.lib

.data 
result           	db "number of divisors = "
newline          	db 10
enterX           	db "Enter x: "               
x 		 	dd 0   
res	 		dd 0                ;result     
del 			dd 0

.data?
inputHandle    	dd ?
outputHandle   	dd ?
noc            	dd ?
buffer 	       	db ?    

.code      
cout PROC msg:dword, chars:dword 
	push NULL              
	push offset noc
	push chars                 
	push msg
	push outputHandle      
	call WriteConsole
	ret
cout ENDP     

cin PROC msg:dword
	push NULL
	push offset noc
	push 100
	push msg
	push inputHandle
	call ReadConsole 
	ret
cin ENDP
main:
;-----------------------------------------------------------------------------------------------------;
push STD_INPUT_HANDLE 
call GetStdHandle
mov inputHandle, EAX

push STD_OUTPUT_HANDLE
call GetStdHandle
mov outputHandle, EAX    


;-----------------------------------------------------------------------------------------------------;
        ;enter x
	push 9
        push offset enterX
        call cout
        
        push offset buffer
        call cin
        
        mov EDX, offset buffer
        mov EAX, noc
        mov byte ptr [ EAX + EDX - 2], 0
        
        push offset buffer
        call atodw  
        
        mov x, EAX 
        
       
                     
      	;------------
        
        mov res, 0  
        mov del, 0  
       
        
        sum:   
        mov eax,x            
        cmp del, eax
        je   endc
        
        inc del 
        
        mov EDX, 0
        div del
        ;add res, EDX   
        cmp edx, 0 
        jne sum 
        inc  res   
        jmp sum 
        
        endc:
        
      	mov EAX, res            
        
        ;------------ 
        
        
        push offset buffer 
        push EAX
        call dwtoa      
             
        push 21
        push offset result
        call cout           
        
        push offset buffer
        call lstrlen
        
        push EAX
        push offset buffer
        call cout
        
;-----------------------------------------------------------------------------------------------------;
;END

final:

push NULL
push offset noc
push 1
push offset buffer
push inputHandle
call ReadConsole

push 0
call ExitProcess

end main